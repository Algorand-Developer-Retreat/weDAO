{
  "version": 3,
  "sources": [
    "/home/arthur/Documents/retreat/weDAO/smart-contracts/we_repo/projects/we_repo/smart_contracts/we_repo/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AA4CE;;AAAA;AAAA;AAAA;;AAAA;AA5CF;;;AAAA;;;AAAA;AAAA;;AA4CE;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAvBF;;;AAAA;;;AAAA;;;AAAA;;;AAuBE;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAnBF;;;AAAA;;;AAmBE;;;AAAA;;AATC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AARD;;;;;;;;;;;;;;;;;AAUmC;;AAAjC;AATF;AAU8B;AAA5B;AATF;;;;;;;;;;;;;;;;;;AAUgC;AAA9B;AATF;;;;;;;;;;;;;;;;;;;;AAUkC;AAAhC;AATF;AAUoB;;AAAlB;;AAGF;;;AAbA;AAcE;;AAAA;;AAGF;;;AAf8D;AAgBxB;;AAhBwB;AAsB7B;AAAA;AAAA;;AAAxB;AAAP;AAI6C;;AAAA;;;AAAA;AAAA;;AAAA;AAAb;AAAA;AAAA;AAAA;;;AAAA;AAAA;AADC;;;;;;;;;;;;;;;;AAAA;AAAA;AA9BnC;AAAA;AAAA;AAAA;AAoCiE;AAA5B;AApCrC;AAoCE;AAAA;AAEA;;AAAA;;AAAA;;AAGF;;;AApC8D;AAqCtD;;AArCsD;AAwC9B;AAAA;AAAA;;AAA9B;AAIuD;AAAA;AAAA;AAAM;AAAA;AAAA;AAAA;;AAAA;AAAA;AACd;;AAAA;AAAA;AAAM;;;AACb;;AAAA;AAAA;AAAM;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAHb;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOjC;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACU;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAR;;;AAA2B;;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;;;AAnD0D;AAsD1B;;AAtD0B;AAsD5D;AAAA;;AAAA;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 10 8"
    },
    "7": {
      "op": "bytecblock \"total_projects\" \"_p\" \"pong\""
    },
    "32": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "34": {
      "op": "bz main_after_if_else@10",
      "stack_out": []
    },
    "37": {
      "op": "pushbytess 0xb8447b36 0x855341c5 0xeb03c927 0x40bbd405 // method \"createApplication()void\", method \"ping(string)void\", method \"createNewProject(string,string)void\", method \"addNewDappsToProject(uint64[],account)void\"",
      "defined_out": [
        "Method(addNewDappsToProject(uint64[],account)void)",
        "Method(createApplication()void)",
        "Method(createNewProject(string,string)void)",
        "Method(ping(string)void)"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(ping(string)void)",
        "Method(createNewProject(string,string)void)",
        "Method(addNewDappsToProject(uint64[],account)void)"
      ]
    },
    "59": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(addNewDappsToProject(uint64[],account)void)",
        "Method(createApplication()void)",
        "Method(createNewProject(string,string)void)",
        "Method(ping(string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(ping(string)void)",
        "Method(createNewProject(string,string)void)",
        "Method(addNewDappsToProject(uint64[],account)void)",
        "tmp%2#0"
      ]
    },
    "62": {
      "op": "match main_createApplication_route@3 main_ping_route@4 main_createNewProject_route@5 main_addNewDappsToProject_route@6",
      "stack_out": []
    },
    "72": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "73": {
      "op": "return",
      "stack_out": []
    },
    "74": {
      "block": "main_addNewDappsToProject_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "76": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "77": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "78": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "80": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "81": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_uint64[]%0#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0"
      ]
    },
    "84": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_uint64[]%0#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "87": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%25#0"
      ]
    },
    "88": {
      "op": "txnas Accounts",
      "defined_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%26#0"
      ]
    },
    "90": {
      "callsub": "smart_contracts/we_repo/contract.algo.ts::WeRepo.addNewDappsToProject",
      "op": "callsub addNewDappsToProject",
      "stack_out": []
    },
    "93": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "94": {
      "op": "return",
      "stack_out": []
    },
    "95": {
      "block": "main_createNewProject_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "97": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "98": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "99": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "101": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "102": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "105": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "108": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "111": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%18#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%20#0"
      ]
    },
    "114": {
      "callsub": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createNewProject",
      "op": "callsub createNewProject",
      "stack_out": []
    },
    "117": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "118": {
      "op": "return",
      "stack_out": []
    },
    "119": {
      "block": "main_ping_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "121": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "122": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "123": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "125": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "126": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "129": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "132": {
      "callsub": "smart_contracts/we_repo/contract.algo.ts::WeRepo.ping",
      "op": "callsub ping",
      "stack_out": []
    },
    "135": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "136": {
      "op": "return",
      "stack_out": []
    },
    "137": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "139": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "140": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "141": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "143": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "144": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "145": {
      "callsub": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createApplication",
      "op": "callsub createApplication"
    },
    "148": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "149": {
      "op": "return",
      "stack_out": []
    },
    "150": {
      "subroutine": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createApplication",
      "params": {},
      "block": "createApplication",
      "stack_in": [],
      "op": "pushbytes \"manager_address\"",
      "defined_out": [
        "\"manager_address\""
      ],
      "stack_out": [
        "\"manager_address\""
      ]
    },
    "167": {
      "op": "txn Sender",
      "defined_out": [
        "\"manager_address\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"manager_address\"",
        "new_state_value%0#0"
      ]
    },
    "169": {
      "op": "app_global_put",
      "stack_out": []
    },
    "170": {
      "op": "bytec_0 // \"total_projects\"",
      "defined_out": [
        "\"total_projects\""
      ],
      "stack_out": [
        "\"total_projects\""
      ]
    },
    "171": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"total_projects\"",
        "0"
      ],
      "stack_out": [
        "\"total_projects\"",
        "0"
      ]
    },
    "172": {
      "op": "app_global_put",
      "stack_out": []
    },
    "173": {
      "op": "pushbytes \"total_reputation\"",
      "defined_out": [
        "\"total_reputation\""
      ],
      "stack_out": [
        "\"total_reputation\""
      ]
    },
    "191": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_reputation\"",
        "0"
      ]
    },
    "192": {
      "op": "app_global_put",
      "stack_out": []
    },
    "193": {
      "op": "pushbytes \"total_contribution\"",
      "defined_out": [
        "\"total_contribution\""
      ],
      "stack_out": [
        "\"total_contribution\""
      ]
    },
    "213": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_contribution\"",
        "0"
      ]
    },
    "214": {
      "op": "app_global_put",
      "stack_out": []
    },
    "215": {
      "op": "bytec_2 // \"pong\"",
      "defined_out": [
        "\"pong\""
      ],
      "stack_out": [
        "\"pong\""
      ]
    },
    "216": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "\"pong\""
      ],
      "stack_out": [
        "\"pong\"",
        "\"\""
      ]
    },
    "218": {
      "op": "app_global_put",
      "stack_out": []
    },
    "219": {
      "retsub": true,
      "op": "retsub"
    },
    "220": {
      "subroutine": "smart_contracts/we_repo/contract.algo.ts::WeRepo.ping",
      "params": {
        "ping#0": "bytes"
      },
      "block": "ping",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "223": {
      "op": "bytec_2 // \"pong\"",
      "defined_out": [
        "\"pong\""
      ],
      "stack_out": [
        "\"pong\""
      ]
    },
    "224": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"pong\"",
        "ping#0 (copy)"
      ],
      "stack_out": [
        "\"pong\"",
        "ping#0 (copy)"
      ]
    },
    "226": {
      "op": "app_global_put",
      "stack_out": []
    },
    "227": {
      "retsub": true,
      "op": "retsub"
    },
    "228": {
      "subroutine": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createNewProject",
      "params": {
        "projectName#0": "bytes",
        "projectDescription#0": "bytes"
      },
      "block": "createNewProject",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "231": {
      "op": "bytec_1 // \"_p\"",
      "defined_out": [
        "\"_p\""
      ],
      "stack_out": [
        "\"_p\""
      ]
    },
    "232": {
      "op": "txn Sender",
      "defined_out": [
        "\"_p\"",
        "creatorAddress#0"
      ],
      "stack_out": [
        "\"_p\"",
        "creatorAddress#0"
      ]
    },
    "234": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0"
      ],
      "stack_out": [
        "currentProjectInstance#0"
      ]
    },
    "235": {
      "op": "dup",
      "defined_out": [
        "currentProjectInstance#0",
        "currentProjectInstance#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "currentProjectInstance#0 (copy)"
      ]
    },
    "236": {
      "op": "box_len",
      "defined_out": [
        "currentProjectInstance#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "237": {
      "op": "bury 1",
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_exists%0#0"
      ]
    },
    "239": {
      "op": "!",
      "defined_out": [
        "currentProjectInstance#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%0#0"
      ]
    },
    "240": {
      "error": "Project already exists for this address",
      "op": "assert // Project already exists for this address",
      "stack_out": [
        "currentProjectInstance#0"
      ]
    },
    "241": {
      "op": "frame_dig -2",
      "defined_out": [
        "currentProjectInstance#0",
        "projectName#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "projectName#0 (copy)"
      ]
    },
    "243": {
      "op": "pushbytes \";\"",
      "defined_out": [
        "\";\"",
        "currentProjectInstance#0",
        "projectName#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "projectName#0 (copy)",
        "\";\""
      ]
    },
    "246": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%2#0"
      ]
    },
    "247": {
      "op": "frame_dig -1",
      "defined_out": [
        "currentProjectInstance#0",
        "projectDescription#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%2#0",
        "projectDescription#0 (copy)"
      ]
    },
    "249": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "to_encode%0#0"
      ]
    },
    "250": {
      "op": "dup",
      "defined_out": [
        "currentProjectInstance#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "251": {
      "op": "len",
      "defined_out": [
        "currentProjectInstance#0",
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "252": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "currentProjectInstance#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "253": {
      "op": "extract 6 2",
      "defined_out": [
        "currentProjectInstance#0",
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "256": {
      "op": "swap",
      "stack_out": [
        "currentProjectInstance#0",
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "257": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "encoded_value%0#0"
      ]
    },
    "258": {
      "op": "pushbytes 0x0000000000000000000c000e0000",
      "defined_out": [
        "0x0000000000000000000c000e0000",
        "currentProjectInstance#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "encoded_value%0#0",
        "0x0000000000000000000c000e0000"
      ]
    },
    "274": {
      "op": "swap",
      "stack_out": [
        "currentProjectInstance#0",
        "0x0000000000000000000c000e0000",
        "encoded_value%0#0"
      ]
    },
    "275": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "project#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0"
      ]
    },
    "276": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "currentProjectInstance#0",
        "project#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "0"
      ]
    },
    "277": {
      "op": "bytec_0 // \"total_projects\"",
      "defined_out": [
        "\"total_projects\"",
        "0",
        "currentProjectInstance#0",
        "project#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "0",
        "\"total_projects\""
      ]
    },
    "278": {
      "op": "app_global_get_ex",
      "defined_out": [
        "currentProjectInstance#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "project#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "279": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "maybe_value%1#0"
      ]
    },
    "280": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "project#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "281": {
      "op": "+",
      "defined_out": [
        "currentProjectInstance#0",
        "new_state_value%0#0",
        "project#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "new_state_value%0#0"
      ]
    },
    "282": {
      "op": "bytec_0 // \"total_projects\"",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "new_state_value%0#0",
        "\"total_projects\""
      ]
    },
    "283": {
      "op": "swap",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "\"total_projects\"",
        "new_state_value%0#0"
      ]
    },
    "284": {
      "op": "app_global_put",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0"
      ]
    },
    "285": {
      "op": "dig 1",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "currentProjectInstance#0 (copy)"
      ]
    },
    "287": {
      "op": "box_del",
      "defined_out": [
        "currentProjectInstance#0",
        "project#0",
        "{box_del}"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "{box_del}"
      ]
    },
    "288": {
      "op": "pop",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0"
      ]
    },
    "289": {
      "op": "box_put",
      "stack_out": []
    },
    "290": {
      "retsub": true,
      "op": "retsub"
    },
    "291": {
      "subroutine": "smart_contracts/we_repo/contract.algo.ts::WeRepo.addNewDappsToProject",
      "params": {
        "dappIds#0": "bytes",
        "creatorAddress#0": "bytes"
      },
      "block": "addNewDappsToProject",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "294": {
      "op": "bytec_1 // \"_p\"",
      "defined_out": [
        "\"_p\""
      ],
      "stack_out": [
        "\"_p\""
      ]
    },
    "295": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"_p\"",
        "creatorAddress#0 (copy)"
      ],
      "stack_out": [
        "\"_p\"",
        "creatorAddress#0 (copy)"
      ]
    },
    "297": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0"
      ],
      "stack_out": [
        "currentProjectInstance#0"
      ]
    },
    "298": {
      "op": "dup",
      "defined_out": [
        "currentProjectInstance#0",
        "currentProjectInstance#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "currentProjectInstance#0 (copy)"
      ]
    },
    "299": {
      "op": "box_len",
      "defined_out": [
        "currentProjectInstance#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "300": {
      "op": "bury 1",
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_exists%0#0"
      ]
    },
    "302": {
      "error": "Project does not exist for this address",
      "op": "assert // Project does not exist for this address",
      "stack_out": [
        "currentProjectInstance#0"
      ]
    },
    "303": {
      "op": "dup",
      "stack_out": [
        "currentProjectInstance#0",
        "currentProjectInstance#0 (copy)"
      ]
    },
    "304": {
      "op": "box_get",
      "defined_out": [
        "currentProjectInstance#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "305": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "307": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "10"
      ]
    },
    "308": {
      "op": "extract_uint16",
      "defined_out": [
        "currentProjectInstance#0",
        "item_start_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "item_start_offset%0#0"
      ]
    },
    "309": {
      "op": "dig 1",
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "item_start_offset%0#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "311": {
      "op": "len",
      "defined_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "312": {
      "op": "substring3",
      "defined_out": [
        "currentProjectInstance#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%0#0"
      ]
    },
    "313": {
      "op": "dig 1",
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%0#0",
        "currentProjectInstance#0 (copy)"
      ]
    },
    "315": {
      "op": "box_get",
      "defined_out": [
        "currentProjectInstance#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "316": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%0#0",
        "maybe_value%2#0"
      ]
    },
    "317": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "currentProjectInstance#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "320": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "currentProjectInstance#0"
      ]
    },
    "322": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "323": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0"
      ]
    },
    "324": {
      "op": "dup",
      "defined_out": [
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "325": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "8"
      ]
    },
    "326": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%1#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0",
        "item_start_offset%1#0"
      ]
    },
    "327": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0",
        "item_start_offset%1#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "329": {
      "op": "intc_2 // 10",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0",
        "item_start_offset%1#0",
        "maybe_value%3#0 (copy)",
        "10"
      ]
    },
    "330": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%3#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "331": {
      "op": "substring3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "332": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "333": {
      "op": "pushbytes 0x000c",
      "defined_out": [
        "0x000c",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x000c"
      ]
    },
    "337": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "338": {
      "op": "dig 1",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "340": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0"
      ]
    },
    "341": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0",
        "12"
      ]
    },
    "343": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "344": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "as_bytes%1#0"
      ]
    },
    "345": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "348": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "349": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%3#0",
        "tmp%2#0"
      ]
    },
    "350": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "351": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ]
    },
    "352": {
      "op": "concat",
      "defined_out": [
        "project#0"
      ],
      "stack_out": [
        "project#0"
      ]
    },
    "353": {
      "op": "frame_dig -2",
      "defined_out": [
        "dappIds#0 (copy)",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "dappIds#0 (copy)"
      ]
    },
    "355": {
      "op": "intc_0 // 0",
      "stack_out": [
        "project#0",
        "dappIds#0 (copy)",
        "0"
      ]
    },
    "356": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0"
      ]
    },
    "357": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "358": {
      "block": "addNewDappsToProject_for_header@1",
      "stack_in": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "360": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "362": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "363": {
      "op": "bz addNewDappsToProject_after_for@4",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "366": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length%0#0",
        "dappIds#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "dappIds#0 (copy)"
      ]
    },
    "368": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "371": {
      "op": "frame_dig 2",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "373": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "374": {
      "op": "cover 2",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "376": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0 (copy)",
        "8"
      ]
    },
    "377": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "378": {
      "op": "extract_uint64",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0"
      ]
    },
    "379": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_index_internal%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0"
      ]
    },
    "381": {
      "op": "dup",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_index_internal%0#0",
        "project#0",
        "project#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "project#0 (copy)"
      ]
    },
    "382": {
      "op": "intc_3 // 8",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "project#0 (copy)",
        "8"
      ]
    },
    "383": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0"
      ]
    },
    "384": {
      "op": "dig 1",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "project#0 (copy)"
      ]
    },
    "386": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "array_length%0#0",
        "dappId#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0",
        "project#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "project#0 (copy)",
        "10"
      ]
    },
    "387": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "388": {
      "op": "dig 2",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "project#0 (copy)"
      ]
    },
    "390": {
      "op": "dig 2",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_start_offset%2#0 (copy)",
        "project#0",
        "project#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "project#0 (copy)",
        "item_start_offset%2#0 (copy)"
      ]
    },
    "392": {
      "op": "dig 2",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_end_offset%2#0",
        "item_end_offset%2#0 (copy)",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_start_offset%2#0 (copy)",
        "project#0",
        "project#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "project#0 (copy)",
        "item_start_offset%2#0 (copy)",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "394": {
      "op": "substring3",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "tmp%3#0"
      ]
    },
    "395": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%0#0",
        "dappId#0",
        "expr_value_trimmed%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dappId#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "398": {
      "op": "uncover 4",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "expr_value_trimmed%0#0",
        "dappId#0"
      ]
    },
    "400": {
      "op": "itob",
      "defined_out": [
        "array_length%0#0",
        "expr_value_trimmed%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "expr_value_trimmed%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "401": {
      "op": "concat",
      "defined_out": [
        "array_length%0#0",
        "concatenated%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concatenated%0#0"
      ]
    },
    "402": {
      "op": "dup",
      "defined_out": [
        "array_length%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "403": {
      "op": "len",
      "defined_out": [
        "array_length%0#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "404": {
      "op": "intc_3 // 8",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "405": {
      "op": "/",
      "defined_out": [
        "array_length%0#0",
        "concatenated%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "len_%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "406": {
      "op": "itob",
      "defined_out": [
        "array_length%0#0",
        "as_bytes%2#0",
        "concatenated%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concatenated%0#0",
        "as_bytes%2#0"
      ]
    },
    "407": {
      "op": "extract 6 2",
      "defined_out": [
        "array_length%0#0",
        "concatenated%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "len_16_bit%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "410": {
      "op": "swap",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "411": {
      "op": "concat",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0"
      ]
    },
    "412": {
      "op": "dig 3",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "project#0 (copy)"
      ]
    },
    "414": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array_length%0#0",
        "concat_result%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0",
        "project#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "project#0 (copy)",
        "0"
      ]
    },
    "415": {
      "op": "dig 4",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "project#0 (copy)",
        "0",
        "item_start_offset%2#0 (copy)"
      ]
    },
    "417": {
      "op": "extract3",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "418": {
      "op": "dig 4",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "project#0 (copy)"
      ]
    },
    "420": {
      "op": "len",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0",
        "total_data_length%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "total_data_length%0#0"
      ]
    },
    "421": {
      "op": "uncover 5",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "total_data_length%0#0",
        "project#0"
      ]
    },
    "423": {
      "op": "dig 4",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "total_data_length%0#0",
        "project#0",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "425": {
      "op": "uncover 2",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "project#0",
        "item_end_offset%2#0 (copy)",
        "total_data_length%0#0"
      ]
    },
    "427": {
      "op": "substring3",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "data_beyond_item%0#0",
        "data_up_to_item%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "data_beyond_item%0#0"
      ]
    },
    "428": {
      "op": "swap",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_beyond_item%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "429": {
      "op": "dig 2",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "concat_result%0#0 (copy)",
        "data_beyond_item%0#0",
        "data_up_to_item%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_beyond_item%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0 (copy)"
      ]
    },
    "431": {
      "op": "concat",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "data_beyond_item%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "data_beyond_item%0#0",
        "updated_data%0#0"
      ]
    },
    "432": {
      "op": "swap",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "updated_data%0#0",
        "data_beyond_item%0#0"
      ]
    },
    "433": {
      "op": "concat",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "item_end_offset%2#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "project#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "concat_result%0#0",
        "updated_data%1#0"
      ]
    },
    "434": {
      "op": "uncover 2",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_start_offset%2#0",
        "concat_result%0#0",
        "updated_data%1#0",
        "item_end_offset%2#0"
      ]
    },
    "436": {
      "op": "uncover 3",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "concat_result%0#0",
        "updated_data%1#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0"
      ]
    },
    "438": {
      "op": "-",
      "defined_out": [
        "array_length%0#0",
        "concat_result%0#0",
        "item_index_internal%0#0",
        "item_length%0#0",
        "project#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "concat_result%0#0",
        "updated_data%1#0",
        "item_length%0#0"
      ]
    },
    "439": {
      "op": "uncover 2",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "item_length%0#0",
        "concat_result%0#0"
      ]
    },
    "441": {
      "op": "len",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_length%0#0",
        "new_value_length%0#0",
        "project#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "item_length%0#0",
        "new_value_length%0#0"
      ]
    },
    "442": {
      "op": "dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_length%0#0",
        "new_value_length%0#0",
        "project#0",
        "updated_data%1#0",
        "updated_data%1#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "item_length%0#0",
        "new_value_length%0#0",
        "updated_data%1#0 (copy)"
      ]
    },
    "444": {
      "op": "intc_2 // 10",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "item_length%0#0",
        "new_value_length%0#0",
        "updated_data%1#0 (copy)",
        "10"
      ]
    },
    "445": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_length%0#0",
        "new_value_length%0#0",
        "project#0",
        "tail_offset%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "item_length%0#0",
        "new_value_length%0#0",
        "tail_offset%0#0"
      ]
    },
    "446": {
      "op": "+",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_length%0#0",
        "project#0",
        "tail_offset%1#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "item_length%0#0",
        "tail_offset%1#0"
      ]
    },
    "447": {
      "op": "swap",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "tail_offset%1#0",
        "item_length%0#0"
      ]
    },
    "448": {
      "op": "-",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "project#0",
        "tail_offset%2#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "tail_offset%2#0"
      ]
    },
    "449": {
      "op": "itob",
      "defined_out": [
        "array_length%0#0",
        "as_bytes%3#0",
        "item_index_internal%0#0",
        "project#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "as_bytes%3#0"
      ]
    },
    "450": {
      "op": "extract 6 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "project#0",
        "tail_offset_bytes%0#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "updated_data%1#0",
        "tail_offset_bytes%0#0"
      ]
    },
    "453": {
      "op": "replace2 10",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "project#0"
      ]
    },
    "455": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "457": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length%0#0",
        "item_index_internal%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "458": {
      "op": "+",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "459": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0",
        "project#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "461": {
      "op": "b addNewDappsToProject_for_header@1"
    },
    "464": {
      "block": "addNewDappsToProject_after_for@4",
      "stack_in": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "bytec_1 // \"_p\"",
      "defined_out": [
        "\"_p\""
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "\"_p\""
      ]
    },
    "465": {
      "op": "txn Sender",
      "defined_out": [
        "\"_p\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "\"_p\"",
        "tmp%4#0"
      ]
    },
    "467": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%5#0"
      ]
    },
    "468": {
      "op": "dup",
      "defined_out": [
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "469": {
      "op": "box_del",
      "defined_out": [
        "tmp%5#0",
        "{box_del}"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%5#0",
        "{box_del}"
      ]
    },
    "470": {
      "op": "pop",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%5#0"
      ]
    },
    "471": {
      "op": "frame_dig 0",
      "defined_out": [
        "project#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%5#0",
        "project#0"
      ]
    },
    "473": {
      "op": "box_put",
      "stack_out": [
        "project#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "474": {
      "retsub": true,
      "op": "retsub"
    }
  }
}