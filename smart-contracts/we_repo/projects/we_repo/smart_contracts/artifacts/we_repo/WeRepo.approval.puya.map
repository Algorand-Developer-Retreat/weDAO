{
  "version": 3,
  "sources": [
    "/home/arthur/Documents/retreat/weDAO/smart-contracts/we_repo/projects/we_repo/smart_contracts/we_repo/contract.algo.ts"
  ],
  "mappings": ";;;;;AAYA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AAgBE;;AAAA;AAAA;AAAA;;AAAA;AAhBF;;;AAgBE;;;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AATF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAEE;;;;;;;;;;;;;;;;;AAQmC;;AAAjC;AAPF;;;;;;;;;;;;;;;;AAQ8B;AAA5B;AAPF;;;;;;;;;;;;;;;;;;AAQgC;AAA9B;AAPF;;;;;;;;;;;;;;;;;;;;AAQkC;AAAhC;;AAGF;;;AAT8D;;;;AAUxB;;AAVwB;AAgB7B;AAAA;AAAA;;AAAxB;AAAP;AAI4B;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACO;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAFF;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAGT;;;;;;;;;;AAHS;AAAA;;AAAA;AAAA;AAAA;AAMjC;;AAAA;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "10": {
      "op": "pushbytess 0xb8447b36 0xc36e5d72 // method \"createApplication()void\", method \"createNewProject((string,string,uint64))void\"",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(createNewProject((string,string,uint64))void)"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(createNewProject((string,string,uint64))void)"
      ]
    },
    "22": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(createNewProject((string,string,uint64))void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(createNewProject((string,string,uint64))void)",
        "tmp%2#0"
      ]
    },
    "25": {
      "op": "match main_createApplication_route@3 main_createNewProject_route@4",
      "stack_out": []
    },
    "31": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "32": {
      "op": "return",
      "stack_out": []
    },
    "33": {
      "block": "main_createNewProject_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "35": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "36": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "37": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "39": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "40": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "43": {
      "callsub": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createNewProject",
      "op": "callsub createNewProject",
      "stack_out": []
    },
    "46": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "47": {
      "op": "return",
      "stack_out": []
    },
    "48": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "50": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "51": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "52": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "54": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "55": {
      "callsub": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createApplication",
      "op": "callsub createApplication"
    },
    "58": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "59": {
      "op": "return",
      "stack_out": []
    },
    "60": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "62": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "65": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "67": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "68": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "69": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "70": {
      "op": "return",
      "stack_out": []
    },
    "71": {
      "subroutine": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createApplication",
      "params": {},
      "block": "createApplication",
      "stack_in": [],
      "op": "pushbytes \"manager_address\"",
      "defined_out": [
        "\"manager_address\""
      ],
      "stack_out": [
        "\"manager_address\""
      ]
    },
    "88": {
      "op": "txn Sender",
      "defined_out": [
        "\"manager_address\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"manager_address\"",
        "new_state_value%0#0"
      ]
    },
    "90": {
      "op": "app_global_put",
      "stack_out": []
    },
    "91": {
      "op": "pushbytes \"total_projects\"",
      "defined_out": [
        "\"total_projects\""
      ],
      "stack_out": [
        "\"total_projects\""
      ]
    },
    "107": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"total_projects\"",
        "0"
      ],
      "stack_out": [
        "\"total_projects\"",
        "0"
      ]
    },
    "108": {
      "op": "app_global_put",
      "stack_out": []
    },
    "109": {
      "op": "pushbytes \"total_reputation\"",
      "defined_out": [
        "\"total_reputation\""
      ],
      "stack_out": [
        "\"total_reputation\""
      ]
    },
    "127": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_reputation\"",
        "0"
      ]
    },
    "128": {
      "op": "app_global_put",
      "stack_out": []
    },
    "129": {
      "op": "pushbytes \"total_contribution\"",
      "defined_out": [
        "\"total_contribution\""
      ],
      "stack_out": [
        "\"total_contribution\""
      ]
    },
    "149": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_contribution\"",
        "0"
      ]
    },
    "150": {
      "op": "app_global_put",
      "stack_out": []
    },
    "151": {
      "retsub": true,
      "op": "retsub"
    },
    "152": {
      "subroutine": "smart_contracts/we_repo/contract.algo.ts::WeRepo.createNewProject",
      "params": {
        "projectData#0": "bytes"
      },
      "block": "createNewProject",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "155": {
      "op": "pushbytes \"_p\"",
      "defined_out": [
        "\"_p\""
      ],
      "stack_out": [
        "\"_p\""
      ]
    },
    "159": {
      "op": "txn Sender",
      "defined_out": [
        "\"_p\"",
        "creatorAddress#0"
      ],
      "stack_out": [
        "\"_p\"",
        "creatorAddress#0"
      ]
    },
    "161": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0"
      ],
      "stack_out": [
        "currentProjectInstance#0"
      ]
    },
    "162": {
      "op": "dup",
      "defined_out": [
        "currentProjectInstance#0",
        "currentProjectInstance#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "currentProjectInstance#0 (copy)"
      ]
    },
    "163": {
      "op": "box_len",
      "defined_out": [
        "currentProjectInstance#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "164": {
      "op": "bury 1",
      "stack_out": [
        "currentProjectInstance#0",
        "maybe_exists%0#0"
      ]
    },
    "166": {
      "op": "!",
      "defined_out": [
        "currentProjectInstance#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%0#0"
      ]
    },
    "167": {
      "error": "Project already exists for this address",
      "op": "assert // Project already exists for this address",
      "stack_out": [
        "currentProjectInstance#0"
      ]
    },
    "168": {
      "op": "frame_dig -1",
      "defined_out": [
        "currentProjectInstance#0",
        "projectData#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "projectData#0 (copy)"
      ]
    },
    "170": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "currentProjectInstance#0",
        "projectData#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "projectData#0 (copy)",
        "0"
      ]
    },
    "171": {
      "op": "extract_uint16",
      "defined_out": [
        "currentProjectInstance#0",
        "item_start_offset%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "item_start_offset%0#0"
      ]
    },
    "172": {
      "op": "frame_dig -1",
      "stack_out": [
        "currentProjectInstance#0",
        "item_start_offset%0#0",
        "projectData#0 (copy)"
      ]
    },
    "174": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "currentProjectInstance#0",
        "item_start_offset%0#0",
        "projectData#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "item_start_offset%0#0",
        "projectData#0 (copy)",
        "2"
      ]
    },
    "176": {
      "op": "extract_uint16",
      "defined_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "177": {
      "op": "frame_dig -1",
      "stack_out": [
        "currentProjectInstance#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "projectData#0 (copy)"
      ]
    },
    "179": {
      "op": "uncover 2",
      "stack_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "projectData#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "181": {
      "op": "dig 2",
      "defined_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "projectData#0 (copy)"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "projectData#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "183": {
      "op": "substring3",
      "defined_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "tmp%1#0"
      ]
    },
    "184": {
      "op": "frame_dig -1",
      "stack_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "tmp%1#0",
        "projectData#0 (copy)"
      ]
    },
    "186": {
      "op": "len",
      "defined_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "tmp%1#0",
        "item_end_offset%1#0"
      ]
    },
    "187": {
      "op": "frame_dig -1",
      "stack_out": [
        "currentProjectInstance#0",
        "item_end_offset%0#0",
        "tmp%1#0",
        "item_end_offset%1#0",
        "projectData#0 (copy)"
      ]
    },
    "189": {
      "op": "uncover 3",
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "item_end_offset%1#0",
        "projectData#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "191": {
      "op": "uncover 2",
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "projectData#0 (copy)",
        "item_end_offset%0#0",
        "item_end_offset%1#0"
      ]
    },
    "193": {
      "op": "substring3",
      "defined_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "194": {
      "op": "dig 1",
      "defined_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%1#0 (copy)"
      ]
    },
    "196": {
      "op": "len",
      "defined_out": [
        "currentProjectInstance#0",
        "data_length%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "data_length%0#0"
      ]
    },
    "197": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "currentProjectInstance#0",
        "data_length%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "data_length%0#0",
        "12"
      ]
    },
    "199": {
      "op": "+",
      "defined_out": [
        "currentProjectInstance#0",
        "current_tail_offset%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "200": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "as_bytes%1#0"
      ]
    },
    "201": {
      "op": "extract 6 2",
      "defined_out": [
        "currentProjectInstance#0",
        "offset_as_uint16%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "204": {
      "op": "pushbytes 0x000c",
      "defined_out": [
        "0x000c",
        "currentProjectInstance#0",
        "offset_as_uint16%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "offset_as_uint16%1#0",
        "0x000c"
      ]
    },
    "208": {
      "op": "swap",
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x000c",
        "offset_as_uint16%1#0"
      ]
    },
    "209": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "210": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "currentProjectInstance#0",
        "encoded_tuple_buffer%2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "encoded_tuple_buffer%3#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%1#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "221": {
      "op": "uncover 2",
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%1#0"
      ]
    },
    "223": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "encoded_tuple_buffer%4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "tmp%2#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "224": {
      "op": "swap",
      "stack_out": [
        "currentProjectInstance#0",
        "encoded_tuple_buffer%4#0",
        "tmp%2#0"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "currentProjectInstance#0",
        "project#0"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0"
      ]
    },
    "226": {
      "op": "dig 1",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "currentProjectInstance#0 (copy)"
      ]
    },
    "228": {
      "op": "box_del",
      "defined_out": [
        "currentProjectInstance#0",
        "project#0",
        "{box_del}"
      ],
      "stack_out": [
        "currentProjectInstance#0",
        "project#0",
        "{box_del}"
      ]
    },
    "229": {
      "op": "pop",
      "stack_out": [
        "currentProjectInstance#0",
        "project#0"
      ]
    },
    "230": {
      "op": "box_put",
      "stack_out": []
    },
    "231": {
      "retsub": true,
      "op": "retsub"
    }
  }
}