{
    "name": "WeRepo",
    "structs": {
        "ProjectDataType": [
            {
                "name": "project_contribution",
                "type": "uint64"
            },
            {
                "name": "project_dapps",
                "type": "uint64[]"
            },
            {
                "name": "project_name_and_description",
                "type": "string"
            }
        ]
    },
    "methods": [
        {
            "name": "createApplication",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "ping",
            "args": [
                {
                    "type": "string",
                    "name": "ping"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "createNewProject",
            "args": [
                {
                    "type": "string",
                    "name": "projectName"
                },
                {
                    "type": "string",
                    "name": "projectDescription"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "addNewDappsToProject",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "dappIds"
                },
                {
                    "type": "account",
                    "name": "creatorAddress"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "manager_address": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bWFuYWdlcl9hZGRyZXNz"
                },
                "total_projects": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxfcHJvamVjdHM="
                },
                "total_reputation": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxfcmVwdXRhdGlvbg=="
                },
                "total_contribution": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dG90YWxfY29udHJpYnV0aW9u"
                },
                "pong": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "cG9uZw=="
                }
            },
            "local": {},
            "box": {
                "project": {
                    "keyType": "AVMString",
                    "valueType": "ProjectDataType",
                    "key": "X3A="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        305,
                        316,
                        323
                    ],
                    "errorMessage": "Box must have value"
                },
                {
                    "pc": [
                        317
                    ],
                    "errorMessage": "Index access is out of bounds"
                },
                {
                    "pc": [
                        77,
                        98,
                        122,
                        140
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        240
                    ],
                    "errorMessage": "Project already exists for this address"
                },
                {
                    "pc": [
                        302
                    ],
                    "errorMessage": "Project does not exist for this address"
                },
                {
                    "pc": [
                        144
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        80,
                        101,
                        125
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        279
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAAEKCCYDDnRvdGFsX3Byb2plY3RzAl9wBHBvbmcxG0EAI4IEBLhEezYEhVNBxQTrA8knBEC71AU2GgCOBABBAC8AFwACIkMxGRREMRhENhoBNhoCF8AciADGI0MxGRREMRhENhoBVwIANhoCVwIAiABvI0MxGRREMRhENhoBVwIAiABVI0MxGRREMRgURIgAAiNDgA9tYW5hZ2VyX2FkZHJlc3MxAGcoImeAEHRvdGFsX3JlcHV0YXRpb24iZ4ASdG90YWxfY29udHJpYnV0aW9uImcqgABniYoBACqL/2eJigIAKTEAUEm9RQEURIv+gAE7UIv/UEkVFlcGAkxQgA4AAAAAAAAAAAAMAA4AAExQIihlRCMIKExnSwG8SL+JigIAKYv/UEm9RQFESb5ESSRZSwEVUksBvkRXAAhPAr5ESSVZSwEkWVJMgAIADFBLARWBDAgWVwYCUExQTFCL/iJZIosCiwEMQQBii/5XAgCLAklOAiULW4sASSVZSwEkWUsCSwJLAlJXAgBPBBZQSRUlChZXBgJMUEsDIksEWEsEFU8FSwRPAlJMSwJQTFBPAk8DCU8CFUsCJFkITAkWVwYCXAqMACMIjAJC/5YpMQBQSbxIiwC/iQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}